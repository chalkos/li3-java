package li3java;

import java.awt.Dimension;
import java.io.File;
import java.util.GregorianCalendar;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import localidade.Ligacao;
import localidade.LocalidadeGraphAlg;
import localidade.Localidades;
import localidade.LocalidadesHashMap;
import utilizador.Utilizador;
import utilizador.Utilizadores;
import utilizador.UtilizadoresHashMap;

public class JanelaPrincipal extends javax.swing.JFrame {
    private static Utilizadores utilizadores;
    private static Localidades localidades;
    
    
    /**
     * Creates new form JanelaPrincipal
     */
    public JanelaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        NomeOuNif = new javax.swing.ButtonGroup();
        jTPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFNome = new javax.swing.JTextField();
        jTFnif = new javax.swing.JTextField();
        jTFmorada = new javax.swing.JTextField();
        jBadicionarUtilizador = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jRBnif = new javax.swing.JRadioButton();
        jRBnome = new javax.swing.JRadioButton();
        jTFpesquisarUtilizadores = new javax.swing.JTextField();
        jSPutilizadores = new javax.swing.JScrollPane();
        jTutilizadores = new li3java.CustomJTable();
        jBseleccionarUtilizadores = new javax.swing.JButton();
        jBapagarUtilizadores = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jBlistarTodosUtilizadores = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTFadicionarLocalidade = new javax.swing.JTextField();
        jBadicionarLocalidade = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jBadicionarLigacao = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jTFdistancia = new javax.swing.JTextField();
        jTFcusto = new javax.swing.JTextField();
        jTFpesquisarLocalidadesOrigem = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLlocOrigem = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLlocDestino = new javax.swing.JList();
        jBlistarTodasLocalidades = new javax.swing.JButton();
        jTFpesquisarLocalidadesDestino = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jTFpesquisarLigs = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLlocListarOrigem = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTlocListarDestino = new li3java.CustomJTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jBlistarOrigensLigs = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jLcaminhoOrigem = new javax.swing.JList();
        jScrollPane7 = new javax.swing.JScrollPane();
        jLcaminhoDestino = new javax.swing.JList();
        jTFcaminhoOrigem = new javax.swing.JTextField();
        jTFcaminhoDestino = new javax.swing.JTextField();
        jBcalculaCaminho = new javax.swing.JButton();
        jLdistancia = new javax.swing.JLabel();
        jBcaminhoOrigem = new javax.swing.JButton();
        jBcaminhoDestino = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transit√°rios LEI");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                formAncestorResized(evt);
            }
        });

        jTPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTPaneStateChanged(evt);
            }
        });

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentResized(evt);
            }
        });
        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {150, 5, 120, 5, 0, 5, 0, 5, 0};
        jPanel2Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 10, 5, 0, 5, 0, 5, 0, 5, 250, 5, 0};
        jPanel2.setLayout(jPanel2Layout);

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 15)); // NOI18N
        jLabel1.setText("Adicionar Utilizador");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Contribuinte");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Morada");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel4, gridBagConstraints);

        jTFNome.setNextFocusableComponent(jTFnif);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jTFNome, gridBagConstraints);

        jTFnif.setNextFocusableComponent(jTFmorada);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jTFnif, gridBagConstraints);

        jTFmorada.setNextFocusableComponent(jBadicionarUtilizador);
        jTFmorada.setPreferredSize(new java.awt.Dimension(200, 28));
        jTFmorada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFmoradaActionPerformed(evt);
            }
        });
        jTFmorada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFmoradaKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFmoradaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jTFmorada, gridBagConstraints);

        jBadicionarUtilizador.setText("Adicionar");
        jBadicionarUtilizador.setNextFocusableComponent(jTFpesquisarUtilizadores);
        jBadicionarUtilizador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBadicionarUtilizadorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(jBadicionarUtilizador, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("DejaVu Sans", 1, 15)); // NOI18N
        jLabel5.setText("Pesquisa de Utilizadores");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel5, gridBagConstraints);

        NomeOuNif.add(jRBnif);
        jRBnif.setSelected(true);
        jRBnif.setText("Contribuinte");
        jRBnif.setNextFocusableComponent(jRBnome);
        jRBnif.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRBnifStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(jRBnif, gridBagConstraints);

        NomeOuNif.add(jRBnome);
        jRBnome.setText("Nome");
        jRBnome.setNextFocusableComponent(jTutilizadores);
        jRBnome.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRBnomeStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jRBnome, gridBagConstraints);

        jTFpesquisarUtilizadores.setNextFocusableComponent(jRBnif);
        jTFpesquisarUtilizadores.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                jTFpesquisarUtilizadoresChanged();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                jTFpesquisarUtilizadoresChanged();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {}
        });
        jTFpesquisarUtilizadores.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFpesquisarUtilizadoresFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jTFpesquisarUtilizadores, gridBagConstraints);

        jSPutilizadores.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jSPutilizadores.setAutoscrolls(true);
        jSPutilizadores.setFocusable(false);

        jTutilizadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "N¬∫ Contribuinte", "Morada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTutilizadores.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTutilizadores.setFillsViewportHeight(true);
        jTutilizadores.setNextFocusableComponent(jBseleccionarUtilizadores);
        jTutilizadores.getTableHeader().setReorderingAllowed(false);
        jSPutilizadores.setViewportView(jTutilizadores);
        jTutilizadores.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jSPutilizadores, gridBagConstraints);

        jBseleccionarUtilizadores.setText("Seleccionar Tudo");
        jBseleccionarUtilizadores.setNextFocusableComponent(jBapagarUtilizadores);
        jBseleccionarUtilizadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBseleccionarUtilizadoresActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel2.add(jBseleccionarUtilizadores, gridBagConstraints);

        jBapagarUtilizadores.setText("Apagar Seleccionados");
        jBapagarUtilizadores.setNextFocusableComponent(jTPane);
        jBapagarUtilizadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBapagarUtilizadoresActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel2.add(jBapagarUtilizadores, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jSeparator1, gridBagConstraints);

        jBlistarTodosUtilizadores.setText("Listar Tudo");
        jBlistarTodosUtilizadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBlistarTodosUtilizadoresActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(jBlistarTodosUtilizadores, gridBagConstraints);

        jTPane.addTab("Gerir Utilizadores", jPanel2);

        java.awt.GridBagLayout jPanel3Layout = new java.awt.GridBagLayout();
        jPanel3Layout.columnWidths = new int[] {0, 5, 110, 5, 110, 5, 110, 5, 110};
        jPanel3Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 240, 5, 0, 5, 0};
        jPanel3.setLayout(jPanel3Layout);

        jLabel6.setFont(new java.awt.Font("DejaVu Sans", 1, 15)); // NOI18N
        jLabel6.setText("Adicionar Localidade");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel3.add(jLabel6, gridBagConstraints);

        jTFadicionarLocalidade.setNextFocusableComponent(jBadicionarLocalidade);
        jTFadicionarLocalidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFadicionarLocalidadeKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jTFadicionarLocalidade, gridBagConstraints);

        jBadicionarLocalidade.setText("Adicionar Localidade");
        jBadicionarLocalidade.setNextFocusableComponent(jBlistarTodasLocalidades);
        jBadicionarLocalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBadicionarLocalidadeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jBadicionarLocalidade, gridBagConstraints);

        jLabel7.setText("Origem");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        jPanel3.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Destino");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        jPanel3.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("DejaVu Sans", 1, 15)); // NOI18N
        jLabel9.setText("Adicionar Liga√ß√µes a Localidades");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel10.setText("Dist√¢ncia");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel3.add(jLabel10, gridBagConstraints);

        jLabel11.setText("Custo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel3.add(jLabel11, gridBagConstraints);

        jBadicionarLigacao.setText("Adicionar Liga√ß√£o");
        jBadicionarLigacao.setNextFocusableComponent(jTPane);
        jBadicionarLigacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBadicionarLigacaoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel3.add(jBadicionarLigacao, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jSeparator2, gridBagConstraints);

        jTFdistancia.setNextFocusableComponent(jTFcusto);
        jTFdistancia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFdistanciaFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jTFdistancia, gridBagConstraints);

        jTFcusto.setNextFocusableComponent(jBadicionarLigacao);
        jTFcusto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFcustoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFcustoFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jTFcusto, gridBagConstraints);

        jTFpesquisarLocalidadesOrigem.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                jTFpesquisarLocalidadesChangedOrigem();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                jTFpesquisarLocalidadesChangedOrigem();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {}
        });
        jTFpesquisarLocalidadesOrigem.setNextFocusableComponent(jTFpesquisarLocalidadesDestino);
        jTFpesquisarLocalidadesOrigem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFpesquisarLocalidadesOrigemFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jTFpesquisarLocalidadesOrigem, gridBagConstraints);

        jLabel12.setText("Pesquisar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel3.add(jLabel12, gridBagConstraints);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(225, 240));

        jLlocOrigem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLlocOrigem.setNextFocusableComponent(jLlocDestino);
        jScrollPane3.setViewportView(jLlocOrigem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jScrollPane3, gridBagConstraints);

        jScrollPane4.setPreferredSize(new java.awt.Dimension(225, 240));

        jLlocDestino.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLlocDestino.setNextFocusableComponent(jTFdistancia);
        jScrollPane4.setViewportView(jLlocDestino);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jScrollPane4, gridBagConstraints);

        jBlistarTodasLocalidades.setText("Listar Todas");
        jBlistarTodasLocalidades.setNextFocusableComponent(jTFpesquisarLocalidadesOrigem);
        jBlistarTodasLocalidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBlistarTodasLocalidadesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jBlistarTodasLocalidades, gridBagConstraints);

        jTFpesquisarLocalidadesDestino.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                jTFpesquisarLocalidadesChangedDestino();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                jTFpesquisarLocalidadesChangedDestino();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {}
        });
        jTFpesquisarLocalidadesDestino.setNextFocusableComponent(jLlocOrigem);
        jTFpesquisarLocalidadesDestino.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFpesquisarLocalidadesDestinoFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jTFpesquisarLocalidadesDestino, gridBagConstraints);

        jTPane.addTab("Adicionar Localidades", jPanel3);

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {200, 5, 300};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 350};
        jPanel1.setLayout(jPanel1Layout);

        jTFpesquisarLigs.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                jTFpesquisarLigsChanged();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                jTFpesquisarLigsChanged();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {}
        });
        jTFpesquisarLigs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFpesquisarLigsFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jTFpesquisarLigs, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("DejaVu Sans", 1, 15)); // NOI18N
        jLabel13.setText("Pesquisar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel13, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 350));

        jLlocListarOrigem.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jLlocListarOrigemValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jLlocListarOrigem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(250, 350));

        jTlocListarDestino.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Dist√¢ncia", "Custo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTlocListarDestino);
        jTlocListarDestino.getColumnModel().getColumn(0).setPreferredWidth(120);
        jTlocListarDestino.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTlocListarDestino.getColumnModel().getColumn(2).setPreferredWidth(30);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jLabel14.setText("Origem");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jLabel14, gridBagConstraints);

        jLabel15.setText("Destinos (liga√ß√µes directas)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jLabel15, gridBagConstraints);

        jBlistarOrigensLigs.setText("Listar Todas as Origens");
        jBlistarOrigensLigs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBlistarOrigensLigsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jBlistarOrigensLigs, gridBagConstraints);

        jTPane.addTab("Listar Liga√ß√µes", jPanel1);

        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {280, 5, 280};
        jPanel4Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 300, 5, 0};
        jPanel4.setLayout(jPanel4Layout);

        jLabel16.setText("Origem");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel4.add(jLabel16, gridBagConstraints);

        jLabel17.setText("Destino");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel4.add(jLabel17, gridBagConstraints);

        jScrollPane6.setPreferredSize(new java.awt.Dimension(280, 300));

        jLcaminhoOrigem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(jLcaminhoOrigem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel4.add(jScrollPane6, gridBagConstraints);

        jScrollPane7.setPreferredSize(new java.awt.Dimension(280, 300));

        jLcaminhoDestino.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(jLcaminhoDestino);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel4.add(jScrollPane7, gridBagConstraints);

        jTFcaminhoOrigem.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                jTFcaminhoOrigemChanged();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                jTFcaminhoOrigemChanged();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {}
        });
        jTFcaminhoOrigem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFcaminhoOrigemFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(jTFcaminhoOrigem, gridBagConstraints);

        jTFcaminhoDestino.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                jTFcaminhoDestinoChanged();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                jTFcaminhoDestinoChanged();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {}
        });
        jTFcaminhoDestino.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFcaminhoDestinoFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(jTFcaminhoDestino, gridBagConstraints);

        jBcalculaCaminho.setText("Calcular Caminho Mais Curto");
        jBcalculaCaminho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcalculaCaminhoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jBcalculaCaminho, gridBagConstraints);

        jLdistancia.setText("0 localidades de dist√¢ncia");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        jPanel4.add(jLdistancia, gridBagConstraints);

        jBcaminhoOrigem.setText("Listar Todas as Origens");
        jBcaminhoOrigem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcaminhoOrigemActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel4.add(jBcaminhoOrigem, gridBagConstraints);

        jBcaminhoDestino.setText("Listar Todos os Destinos");
        jBcaminhoDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcaminhoDestinoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel4.add(jBcaminhoDestino, gridBagConstraints);

        jTPane.addTab("Calcular Caminhos", jPanel4);

        jMenu1.setText("Ficheiro");

        jMenuItem4.setText("Abrir...");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Guardar...");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Modo de testes da Camada de Persist√™ncia");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Importar");

        jMenuItem1.setText("Utilizadores...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Localidades...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Liga√ß√µes...");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTPane, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTPane, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFmoradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFmoradaActionPerformed
        
    }//GEN-LAST:event_jTFmoradaActionPerformed

    private void jBseleccionarUtilizadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBseleccionarUtilizadoresActionPerformed
        jTutilizadores.selectAll();
    }//GEN-LAST:event_jBseleccionarUtilizadoresActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser fc = new JFileChooser();
	fc.setMultiSelectionEnabled(false);
	fc.setDialogTitle("Abrir ficheiro de Utilizadores");
        int returnVal = fc.showOpenDialog(this);
        
        if( returnVal == JFileChooser.APPROVE_OPTION )
            JOptionPane.showMessageDialog(this, Ficheiro.getUtilizadores(utilizadores, fc.getSelectedFile()) + " utilizadores importados!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
	
	jTFpesquisarUtilizadoresChanged();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JFileChooser fc = new JFileChooser();
	fc.setMultiSelectionEnabled(false);
	fc.setDialogTitle("Abrir ficheiro de Localidades");
        int returnVal = fc.showOpenDialog(this);
        
        if( returnVal == JFileChooser.APPROVE_OPTION )
            JOptionPane.showMessageDialog(this, Ficheiro.getLocalidades(localidades, fc.getSelectedFile()) + " localidades importadas!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        JFileChooser fc = new JFileChooser();
	fc.setMultiSelectionEnabled(false);
	fc.setDialogTitle("Abrir ficheiro de Liga√ß√µes");
        int returnVal = fc.showOpenDialog(this);
        
        if( returnVal == JFileChooser.APPROVE_OPTION )
            JOptionPane.showMessageDialog(this, Ficheiro.getLigacoes(localidades, fc.getSelectedFile()) + " liga√ß√µes importadas!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jBadicionarUtilizadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBadicionarUtilizadorActionPerformed
        if( utilizadores.insere(new Utilizador(jTFnif.getText(), jTFNome.getText(), jTFmorada.getText())) ){
            JOptionPane.showMessageDialog(this, msgDialog.utilizador_novo_sucesso_msg, msgDialog.utilizador_novo_sucesso_titulo, msgDialog.utilizador_novo_sucesso_tipo);
            jTFNome.setText("");
            jTFmorada.setText("");
            jTFnif.setText("");
        }else
            JOptionPane.showMessageDialog(this, msgDialog.utilizador_novo_insucesso_msg, msgDialog.utilizador_novo_insucesso_titulo, msgDialog.utilizador_novo_insucesso_tipo);
        
        jTFNome.requestFocusInWindow();
        
        jTFpesquisarUtilizadoresChanged();
    }//GEN-LAST:event_jBadicionarUtilizadorActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized

    }//GEN-LAST:event_formComponentResized

    private void formAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorResized
        
    }//GEN-LAST:event_formAncestorResized

    private void jPanel2ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentResized
        
    }//GEN-LAST:event_jPanel2ComponentResized

    private void jRBnifStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRBnifStateChanged
	jTFpesquisarUtilizadoresChanged();
    }//GEN-LAST:event_jRBnifStateChanged

    private void jRBnomeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRBnomeStateChanged
	jTFpesquisarUtilizadoresChanged();
    }//GEN-LAST:event_jRBnomeStateChanged

    private void jBapagarUtilizadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBapagarUtilizadoresActionPerformed
	int []seleccionadas = jTutilizadores.getSelectedRows();
	String texto = " utilizadores?";
	
	if( seleccionadas.length == 0 )
	    return;
	
	if( seleccionadas.length == 1 )
	    texto = " utilizador?";
	
	if( JOptionPane.showConfirmDialog(this, "Apagar " + seleccionadas.length + texto, "Confirma√ß√£o", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION ){
	    for(int row : seleccionadas)
		//utilizadores.remove( (String)jTutilizadores.getCellEditor(row, 1).getCellEditorValue() );
		utilizadores.remove( (String)jTutilizadores.getValueAt(row, 1) );
	
	    jTFpesquisarUtilizadoresChanged();
	}
    }//GEN-LAST:event_jBapagarUtilizadoresActionPerformed

    private void jBlistarTodosUtilizadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBlistarTodosUtilizadoresActionPerformed
	jTFpesquisarUtilizadores.setText("[todos]");
    }//GEN-LAST:event_jBlistarTodosUtilizadoresActionPerformed

    private void jBadicionarLocalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBadicionarLocalidadeActionPerformed
	adicionarLocalidade();
    }//GEN-LAST:event_jBadicionarLocalidadeActionPerformed

    private void jBlistarTodasLocalidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBlistarTodasLocalidadesActionPerformed
	jTFpesquisarLocalidadesOrigem.setText("[todas]");
	jTFpesquisarLocalidadesDestino.setText("[todas]");
        jTFpesquisarLocalidadesChangedOrigem();
        jTFpesquisarLocalidadesChangedDestino();
    }//GEN-LAST:event_jBlistarTodasLocalidadesActionPerformed

    private void jTFmoradaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFmoradaKeyTyped
	
    }//GEN-LAST:event_jTFmoradaKeyTyped

    private void jTFmoradaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFmoradaKeyReleased
	
    }//GEN-LAST:event_jTFmoradaKeyReleased

    private void jTFadicionarLocalidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFadicionarLocalidadeKeyReleased
	if( evt.getKeyCode() == 10 ) //se pressionou enter
	    adicionarLocalidade();
    }//GEN-LAST:event_jTFadicionarLocalidadeKeyReleased

    private void jTFdistanciaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFdistanciaFocusGained
	selectAllOnTextFieldFocus(evt);
    }//GEN-LAST:event_jTFdistanciaFocusGained

    private void jTFcustoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFcustoFocusGained
	selectAllOnTextFieldFocus(evt);
    }//GEN-LAST:event_jTFcustoFocusGained

    private void jTFcustoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFcustoFocusLost
	// TODO add your handling code here:
    }//GEN-LAST:event_jTFcustoFocusLost

    private void jBadicionarLigacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBadicionarLigacaoActionPerformed
	if( jLlocOrigem.getSelectedIndices().length == 0 || jLlocDestino.getSelectedIndices().length == 0 ){
	    JOptionPane.showMessageDialog(this, msgDialog.seleccioneOrigemEDestino_msg, msgDialog.seleccioneOrigemEDestino_titulo, msgDialog.seleccioneOrigemEDestino_tipo);
	    return;
	}
	
	if( jTFdistancia.getText().isEmpty() ){
	    JOptionPane.showMessageDialog(this, msgDialog.stringToDouble_msg + " para a dist√¢ncia.", msgDialog.stringToDouble_titulo, msgDialog.stringToDouble_tipo);
	    return;
	}
	
	if( jTFcusto.getText().isEmpty() ){
	    JOptionPane.showMessageDialog(this, msgDialog.stringToDouble_msg + " para o custo.", msgDialog.stringToDouble_titulo, msgDialog.stringToDouble_tipo);
	    return;
	}
	
	Double distancia = Double.parseDouble(jTFdistancia.getText());
	if( distancia.isInfinite() || distancia.isNaN() ){
	    JOptionPane.showMessageDialog(this, msgDialog.stringToDouble_msg + " para a dist√¢ncia.", msgDialog.stringToDouble_titulo, msgDialog.stringToDouble_tipo);
	    return;
	}
	
	Double custo = Double.parseDouble(jTFcusto.getText());
	if( custo.isInfinite() || custo.isNaN() ){
	    JOptionPane.showMessageDialog(this, msgDialog.stringToDouble_msg + " para o custo.", msgDialog.stringToDouble_titulo, msgDialog.stringToDouble_tipo);
	    return;
	}
	
	if( jLlocOrigem.getSelectedIndex() == jLlocDestino.getSelectedIndex() ){
	    JOptionPane.showMessageDialog(this, msgDialog.origemEDestinoIguais_msg, msgDialog.origemEDestinoIguais_titulo, msgDialog.origemEDestinoIguais_tipo);
	    return;
	}
	
	if( localidades.insereLigacao(jLlocOrigem.getSelectedValue().toString(), new Ligacao(jLlocDestino.getSelectedValue().toString(), distancia, custo)) ){
	    JOptionPane.showMessageDialog(this, msgDialog.sucessoInserirLigacao_msg, msgDialog.sucessoInserirLigacao_titulo, msgDialog.sucessoInserirLigacao_tipo);
	}else
	    JOptionPane.showMessageDialog(this, msgDialog.insucessoInserirLigacao_msg, msgDialog.insucessoInserirLigacao_titulo, msgDialog.insucessoInserirLigacao_tipo);
	
    }//GEN-LAST:event_jBadicionarLigacaoActionPerformed

    private void jTFpesquisarLocalidadesOrigemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFpesquisarLocalidadesOrigemFocusGained
	selectAllOnTextFieldFocus(evt);
    }//GEN-LAST:event_jTFpesquisarLocalidadesOrigemFocusGained

    private void jTFpesquisarLocalidadesDestinoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFpesquisarLocalidadesDestinoFocusGained
	selectAllOnTextFieldFocus(evt);
    }//GEN-LAST:event_jTFpesquisarLocalidadesDestinoFocusGained

    private void jTFpesquisarUtilizadoresFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFpesquisarUtilizadoresFocusGained
	selectAllOnTextFieldFocus(evt);
    }//GEN-LAST:event_jTFpesquisarUtilizadoresFocusGained

    private void jBlistarOrigensLigsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBlistarOrigensLigsActionPerformed
	jTFpesquisarLigs.setText("[todas]");
	jTFpesquisarLigsChanged();
    }//GEN-LAST:event_jBlistarOrigensLigsActionPerformed

    private void jTPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTPaneStateChanged
        if( ((JTabbedPane)evt.getSource()).getSelectedComponent().equals(jPanel1) )
	    jTFpesquisarLigsChanged();
    }//GEN-LAST:event_jTPaneStateChanged

    private void jLlocListarOrigemValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jLlocListarOrigemValueChanged
	if( jLlocListarOrigem.getSelectedIndices().length == 1 )
	    popularListaLigacoes();
    }//GEN-LAST:event_jLlocListarOrigemValueChanged

    private void jTFpesquisarLigsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFpesquisarLigsFocusGained
	selectAllOnTextFieldFocus(evt);
    }//GEN-LAST:event_jTFpesquisarLigsFocusGained

    private void jTFcaminhoOrigemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFcaminhoOrigemFocusGained
	selectAllOnTextFieldFocus(evt);
    }//GEN-LAST:event_jTFcaminhoOrigemFocusGained

    private void jTFcaminhoDestinoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFcaminhoDestinoFocusGained
	selectAllOnTextFieldFocus(evt);
    }//GEN-LAST:event_jTFcaminhoDestinoFocusGained

    private void jBcaminhoOrigemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcaminhoOrigemActionPerformed
	jTFcaminhoOrigem.setText("[todas]");
	jTFcaminhoOrigemChanged();
    }//GEN-LAST:event_jBcaminhoOrigemActionPerformed

    private void jBcaminhoDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcaminhoDestinoActionPerformed
	jTFcaminhoDestino.setText("[todas]");
	jTFcaminhoDestinoChanged();
    }//GEN-LAST:event_jBcaminhoDestinoActionPerformed

    private void jBcalculaCaminhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcalculaCaminhoActionPerformed
	String text = " localidades de dist√¢ncia";
	int nlocs = 0;
	
	if( jLcaminhoOrigem.getSelectedIndices().length != 1 || jLcaminhoDestino.getSelectedIndices().length != 1 ){
	    JOptionPane.showMessageDialog(this, msgDialog.seleccioneOrigemEDestino_msg, msgDialog.seleccioneOrigemEDestino_titulo, msgDialog.seleccioneOrigemEDestino_tipo);
	}else{
	    nlocs = (new LocalidadeGraphAlg()).buildGraph(localidades, jLcaminhoOrigem.getSelectedValue().toString(), jLcaminhoDestino.getSelectedValue().toString());
	}
	
	jLdistancia.setText(nlocs + text);
    }//GEN-LAST:event_jBcalculaCaminhoActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
	abrirGuardar(false);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
	abrirGuardar(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
	
	if( JOptionPane.showConfirmDialog(this, "Dados n√£o guardados ser√£o perdidos, continuar?", "Pretende continuar?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
	    this.setVisible(false);
	    Persistencia.main(new String[0]);
	}
    }//GEN-LAST:event_jMenuItem6ActionPerformed
    
    private void abrirGuardar(boolean abrir){
	JFileChooser fc = new JFileChooser(".");
	fc.setAcceptAllFileFilterUsed(false);
	fc.setMultiSelectionEnabled(false);
	fc.addChoosableFileFilter(new FileFilterStreamsDeObjecto());
	fc.addChoosableFileFilter(new FileFilterEscritaFormatada());
	int res;
	
	if( abrir ){
	    res = fc.showOpenDialog(this);

	    if (res == JFileChooser.APPROVE_OPTION) {
		String ext = "";
		String extension = fc.getFileFilter().getDescription();
		File file = fc.getSelectedFile();
		if (extension.equals( FileFilterStreamsDeObjecto.descricao )) {
		    Dados d = Ficheiro.lerSDO(file, localidades, utilizadores);
		    localidades = d.getLocalidades();
		    utilizadores = d.getUtilizadores();
		    JOptionPane.showMessageDialog(this, "Todos os dados foram importados com sucesso.", "Dados importados", JOptionPane.INFORMATION_MESSAGE);
		}else if (extension.equals(FileFilterEscritaFormatada.descricao)) {
		    Dados d = Ficheiro.lerEF(file, localidades, utilizadores);
		    
		    switch( d.quantidades.length ){
			case 1:
			    JOptionPane.showMessageDialog(this, msgDialog.ficheiro_abrir_erro_msg, msgDialog.ficheiro_abrir_erro_titulo, msgDialog.ficheiro_abrir_erro_tipo);
			    break;
			case 2:
			    JOptionPane.showMessageDialog(this, msgDialog.EF_corrompido_msg, msgDialog.EF_corrompido_titulo, msgDialog.EF_corrompido_tipo);
			    break;
			case 6:
			    localidades = d.getLocalidades();
			    utilizadores = d.getUtilizadores();
			    JOptionPane.showMessageDialog(this,
				    String.format("Dados importados:\nLocalidades (%d de %d)\nLiga√ß√µes (%d de %d)\nUtilizadores (%d de %d)",
					d.quantidades[0],
					d.quantidades[1],
					d.quantidades[2],
					d.quantidades[3],
					d.quantidades[4],
					d.quantidades[5]),
				    "Dados importados",
				    JOptionPane.INFORMATION_MESSAGE
				    );
			    break;
		    }
		}
	    }
	}else{
	    while(true){
		res = fc.showSaveDialog(this);
		if (res == JFileChooser.APPROVE_OPTION) {
		    String ext = "";
		    String extension = fc.getFileFilter().getDescription();
		    File file = fc.getSelectedFile();

		    if( file.exists() ){
			int subst = JOptionPane.showConfirmDialog(this, msgDialog.ficheiroExiste_msg, msgDialog.ficheiroExiste_titulo, JOptionPane.YES_NO_CANCEL_OPTION);
			if( subst == JOptionPane.YES_OPTION ){
			    GregorianCalendar gc = new GregorianCalendar();
			    if (extension.equals( FileFilterStreamsDeObjecto.descricao )){
				if(Ficheiro.escreverSDO(file, localidades, utilizadores))
				    JOptionPane.showMessageDialog(this, msgDialog.sucessoEscreverDados_msg, msgDialog.sucessoEscreverDados_titulo, msgDialog.sucessoEscreverDados_tipo);
				else
				    JOptionPane.showMessageDialog(this, msgDialog.insucessoEscreverDados_msg, msgDialog.insucessoEscreverDados_titulo, msgDialog.insucessoEscreverDados_tipo);
			    }else if (extension.equals(FileFilterEscritaFormatada.descricao)){
				if( Ficheiro.escreverEF(file, localidades, utilizadores) )
				    JOptionPane.showMessageDialog(this, msgDialog.sucessoEscreverDados_msg, msgDialog.sucessoEscreverDados_titulo, msgDialog.sucessoEscreverDados_tipo);
				else
				    JOptionPane.showMessageDialog(this, msgDialog.insucessoEscreverDados_msg, msgDialog.insucessoEscreverDados_titulo, msgDialog.insucessoEscreverDados_tipo);
			    }
			    
			    break;
			}else if( subst == JOptionPane.NO_OPTION ){
			    //se repsondeu que n√£o queria substituir, volta a mostrar o fileChooser
			}else
			    break; //se carregou cancelar, fechou a janela, etc. cancela a escrita de ficheiro imediatamente
		    }else{
			GregorianCalendar gc = new GregorianCalendar();
			if (extension.equals( FileFilterStreamsDeObjecto.descricao ))
			    Ficheiro.escreverSDO(file, localidades, utilizadores);
			else if (extension.equals(FileFilterEscritaFormatada.descricao))
			    Ficheiro.escreverEF(file, localidades, utilizadores);
			JOptionPane.showMessageDialog(this, "Done, demorou " + ((new GregorianCalendar()).getTimeInMillis() - gc.getTimeInMillis()) + "ms");
			break;
		    }
		}else
		    break;
	    }
	}
    }
    
    private void jTFpesquisarUtilizadoresChanged(){
	Object [][]dados;
	
	String texto = jTFpesquisarUtilizadores.getText();
        
        String []nomesColunas = new String[jTutilizadores.getModel().getColumnCount()];
        for(int i=0; i<nomesColunas.length; i++)
            nomesColunas[i] = jTutilizadores.getModel().getColumnName(i);
        

	
        
        DefaultTableModel tmpModel = new DefaultTableModel(null, nomesColunas);
	DefaultTableModel model;
        jTutilizadores.setModel(tmpModel);
        
        if( jTFpesquisarUtilizadores.getText().isEmpty() || (!jRBnif.isSelected() && !jRBnome.isSelected()))
            return;
        
	jTutilizadores.getColumnModel().getColumn(0).setCellRenderer(new StatusColumnCellRenderer(0));
	jTutilizadores.getColumnModel().getColumn(1).setCellRenderer(new StatusColumnCellRenderer(0));
	jTutilizadores.getColumnModel().getColumn(2).setCellRenderer(new StatusColumnCellRenderer(0));
	
        tmpModel.addRow(new Object[]{"... Aguarde ...","... Aguarde ...","... Aguarde ..."});
        
	if (texto.equals(jTFpesquisarUtilizadores.getText())) {
	    if (jRBnif.isSelected()) {
		dados = utilizadores.contains(jTFpesquisarUtilizadores.getText(), Utilizadores.CAMPO_NIF);
	    } else {
		dados = utilizadores.contains(jTFpesquisarUtilizadores.getText(), Utilizadores.CAMPO_NOME);
	    }
	    
	    if (texto.equals(jTFpesquisarUtilizadores.getText())){
		model = new DefaultTableModel(dados, nomesColunas);
		jTutilizadores.setModel(model);
	    }
	}
	
	jTutilizadores.setPreferredSize( new Dimension(jTutilizadores.getPreferredSize().width,
		jTutilizadores.getRowCount()*jTutilizadores.getRowHeight()) );
        
        
    }
    
    private void jTFpesquisarLocalidadesChangedOrigem(){
	String []dados;
	
	String texto = jTFpesquisarLocalidadesOrigem.getText();
        
	DefaultListModel tmpModel = new DefaultListModel();
	DefaultListModel model = new DefaultListModel();
	jLlocOrigem.setModel(tmpModel);
	
	
        if( jTFpesquisarLocalidadesOrigem.getText().isEmpty() )
            return;
	
	tmpModel.addElement("... Aguarde ...");
        
	if (texto.equals(jTFpesquisarLocalidadesOrigem.getText())){
	    dados = localidades.contains( jTFpesquisarLocalidadesOrigem.getText() );

	    for( String str : dados )
		model.addElement(str);

	    jLlocOrigem.setModel(model);
	}
    }
    
    private void jTFpesquisarLocalidadesChangedDestino(){
	String []dados;
	
	String texto = jTFpesquisarLocalidadesDestino.getText();
        
	DefaultListModel tmpModel = new DefaultListModel();
	DefaultListModel model = new DefaultListModel();
	jLlocDestino.setModel(tmpModel);
	
	
        if( jTFpesquisarLocalidadesDestino.getText().isEmpty() )
            return;
	
	tmpModel.addElement("... Aguarde ...");
        
	if (texto.equals(jTFpesquisarLocalidadesDestino.getText())){
	    dados = localidades.contains( jTFpesquisarLocalidadesDestino.getText() );

	    for( String str : dados )
		model.addElement(str);

	    jLlocDestino.setModel(model);
	}
    }
    
    private void jTFpesquisarLigsChanged(){
	String []dados;
	
	String texto = jTFpesquisarLigs.getText();
        
	DefaultListModel tmpModel = new DefaultListModel();
	DefaultListModel model = new DefaultListModel();
	jLlocListarOrigem.setModel(tmpModel);
	
	
        if( jTFpesquisarLigs.getText().isEmpty() )
            return;
	
	tmpModel.addElement("... Aguarde ...");
        
	if (texto.equals(jTFpesquisarLigs.getText())){
	    dados = localidades.contains( jTFpesquisarLigs.getText() );

	    for( String str : dados )
		model.addElement(str);

	    jLlocListarOrigem.setModel(model);
	}
    }
    
    private void popularListaLigacoes(){
	Object [][]dados;
	
	String texto = jLlocListarOrigem.getSelectedValue().toString();
        
        String []nomesColunas = new String[jTlocListarDestino.getModel().getColumnCount()];
        for(int i=0; i<nomesColunas.length; i++)
            nomesColunas[i] = jTlocListarDestino.getModel().getColumnName(i);
        
        DefaultTableModel tmpModel = new DefaultTableModel(null, nomesColunas);
	DefaultTableModel model;
        jTlocListarDestino.setModel(tmpModel);
        
	jTlocListarDestino.getColumnModel().getColumn(0).setCellRenderer(new StatusColumnCellRenderer(0));
	jTlocListarDestino.getColumnModel().getColumn(0).setPreferredWidth(120);
	jTlocListarDestino.getColumnModel().getColumn(1).setCellRenderer(new StatusColumnCellRenderer(0));
	jTlocListarDestino.getColumnModel().getColumn(1).setPreferredWidth(80);
	jTlocListarDestino.getColumnModel().getColumn(2).setCellRenderer(new StatusColumnCellRenderer(0));
	jTlocListarDestino.getColumnModel().getColumn(2).setPreferredWidth(30);
	
        tmpModel.addRow(new Object[]{"... Aguarde ...","...","..."});
        
	if (texto.equals(jLlocListarOrigem.getSelectedValue().toString())){
	    dados = localidades.listaLigacoes(texto);

	    model = new DefaultTableModel(dados, nomesColunas);

	    jTlocListarDestino.setModel(model);
	}
	
	jTlocListarDestino.setPreferredSize( new Dimension(jTlocListarDestino.getPreferredSize().width,
		jTlocListarDestino.getRowCount()*jTlocListarDestino.getRowHeight()) );
        
        
    }
    
    private void adicionarLocalidade(){
	if( jTFadicionarLocalidade.getText().isEmpty() )
	    return;
	
	if( localidades.insere(new localidade.Localidade(jTFadicionarLocalidade.getText()) ) ){
            JOptionPane.showMessageDialog(this, msgDialog.localidade_novo_sucesso_msg, msgDialog.localidade_novo_sucesso_titulo, msgDialog.localidade_novo_sucesso_tipo);
            jTFadicionarLocalidade.setText("");
        }else
            JOptionPane.showMessageDialog(this, msgDialog.localidade_novo_insucesso_msg, msgDialog.localidade_novo_insucesso_titulo, msgDialog.localidade_novo_insucesso_tipo);
        
        jTFadicionarLocalidade.requestFocusInWindow();
        
        jTFpesquisarLocalidadesChangedOrigem();
        jTFpesquisarLocalidadesChangedDestino();
    }
    
    private void selectAllOnTextFieldFocus(java.awt.event.FocusEvent evt){
	JTextField tf = (JTextField)evt.getComponent();
	tf.selectAll();
    }
    
    private void jTFcaminhoOrigemChanged(){
	String []dados;
	
	String texto = jTFcaminhoOrigem.getText();
        
	DefaultListModel tmpModel = new DefaultListModel();
	DefaultListModel model = new DefaultListModel();
	jLcaminhoOrigem.setModel(tmpModel);
	
	
        if( jTFcaminhoOrigem.getText().isEmpty() )
            return;
	
	tmpModel.addElement("... Aguarde ...");
        
	if (texto.equals(jTFcaminhoOrigem.getText())){
	    dados = localidades.contains( jTFcaminhoOrigem.getText() );

	    for( String str : dados )
		model.addElement(str);

	    jLcaminhoOrigem.setModel(model);
	}
    }
    
    private void jTFcaminhoDestinoChanged(){
	String []dados;
	
	String texto = jTFcaminhoDestino.getText();
        
	DefaultListModel tmpModel = new DefaultListModel();
	DefaultListModel model = new DefaultListModel();
	jLcaminhoDestino.setModel(tmpModel);
	
	
        if( jTFcaminhoDestino.getText().isEmpty() )
            return;
	
	tmpModel.addElement("... Aguarde ...");
        
	if (texto.equals(jTFcaminhoDestino.getText())){
	    dados = localidades.contains( jTFcaminhoDestino.getText() );

	    for( String str : dados )
		model.addElement(str);

	    jLcaminhoDestino.setModel(model);
	}
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /*
         * Inicializar as estruturas de dados
         */
        
        utilizadores = new UtilizadoresHashMap(20);
        localidades = new LocalidadesHashMap(20);
        
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new JanelaPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup NomeOuNif;
    private javax.swing.JButton jBadicionarLigacao;
    private javax.swing.JButton jBadicionarLocalidade;
    private javax.swing.JButton jBadicionarUtilizador;
    private javax.swing.JButton jBapagarUtilizadores;
    private javax.swing.JButton jBcalculaCaminho;
    private javax.swing.JButton jBcaminhoDestino;
    private javax.swing.JButton jBcaminhoOrigem;
    private javax.swing.JButton jBlistarOrigensLigs;
    private javax.swing.JButton jBlistarTodasLocalidades;
    private javax.swing.JButton jBlistarTodosUtilizadores;
    private javax.swing.JButton jBseleccionarUtilizadores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jLcaminhoDestino;
    private javax.swing.JList jLcaminhoOrigem;
    private javax.swing.JLabel jLdistancia;
    private javax.swing.JList jLlocDestino;
    private javax.swing.JList jLlocListarOrigem;
    private javax.swing.JList jLlocOrigem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRBnif;
    private javax.swing.JRadioButton jRBnome;
    private javax.swing.JScrollPane jSPutilizadores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTFNome;
    private javax.swing.JTextField jTFadicionarLocalidade;
    private javax.swing.JTextField jTFcaminhoDestino;
    private javax.swing.JTextField jTFcaminhoOrigem;
    private javax.swing.JTextField jTFcusto;
    private javax.swing.JTextField jTFdistancia;
    private javax.swing.JTextField jTFmorada;
    private javax.swing.JTextField jTFnif;
    private javax.swing.JTextField jTFpesquisarLigs;
    private javax.swing.JTextField jTFpesquisarLocalidadesDestino;
    private javax.swing.JTextField jTFpesquisarLocalidadesOrigem;
    private javax.swing.JTextField jTFpesquisarUtilizadores;
    private javax.swing.JTabbedPane jTPane;
    private li3java.CustomJTable jTlocListarDestino;
    private li3java.CustomJTable jTutilizadores;
    // End of variables declaration//GEN-END:variables
}



